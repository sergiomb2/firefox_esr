diff -up mozilla-aurora/browser/components/preferences/in-content/advanced.xul.default mozilla-aurora/browser/components/preferences/in-content/advanced.xul
--- mozilla-aurora/browser/components/preferences/in-content/advanced.xul.default	2016-11-15 12:21:37.000000000 +0100
+++ mozilla-aurora/browser/components/preferences/in-content/advanced.xul	2016-12-08 10:51:04.049353573 +0100
@@ -75,7 +75,7 @@
               type="bool"/>
 
  <!-- Update tab -->
-#ifdef MOZ_UPDATER
+#ifdef 0
   <preference id="app.update.enabled"
               name="app.update.enabled"
               type="bool"/>
@@ -116,7 +116,7 @@
               type="int"/>
 </preferences>
 
-#ifdef HAVE_SHELL_SERVICE
+#ifdef 0
   <stringbundle id="bundleShell" src="chrome://browser/locale/shellservice.properties"/>
   <stringbundle id="bundleBrand" src="chrome://branding/locale/brand.properties"/>
 #endif
diff -up mozilla-aurora/browser/components/shell/nsGNOMEShellService.cpp.default mozilla-aurora/browser/components/shell/nsGNOMEShellService.cpp
--- mozilla-aurora/browser/components/shell/nsGNOMEShellService.cpp.default	2016-11-15 12:21:39.000000000 +0100
+++ mozilla-aurora/browser/components/shell/nsGNOMEShellService.cpp	2016-12-08 10:51:04.049353573 +0100
@@ -150,8 +150,8 @@ nsGNOMEShellService::GetAppPathFromLaunc
 bool
 nsGNOMEShellService::KeyMatchesAppName(const char *aKeyValue) const
 {
+  nsAutoCString appName;
 
-  gchar *commandPath;
   if (mUseLocaleFilenames) {
     gchar *nativePath = g_filename_from_utf8(aKeyValue, -1,
                                              nullptr, nullptr, nullptr);
@@ -160,17 +160,13 @@ nsGNOMEShellService::KeyMatchesAppName(c
       return false;
     }
 
-    commandPath = g_find_program_in_path(nativePath);
+    appName.Assign(nativePath);
     g_free(nativePath);
   } else {
-    commandPath = g_find_program_in_path(aKeyValue);
+    appName.Assign(aKeyValue);
   }
 
-  if (!commandPath)
-    return false;
-
-  bool matches = mAppPath.Equals(commandPath);
-  g_free(commandPath);
+  bool matches = mAppPath.Equals(appName);
   return matches;
 }
 
@@ -253,16 +249,7 @@ nsGNOMEShellService::SetDefaultBrowser(b
   nsCOMPtr<nsIGConfService> gconf = do_GetService(NS_GCONFSERVICE_CONTRACTID);
   nsCOMPtr<nsIGIOService> giovfs = do_GetService(NS_GIOSERVICE_CONTRACTID);
   if (gconf) {
-    nsAutoCString appKeyValue;
-    if (mAppIsInPath) {
-      // mAppPath is in the users path, so use only the basename as the launcher
-      gchar *tmp = g_path_get_basename(mAppPath.get());
-      appKeyValue = tmp;
-      g_free(tmp);
-    } else {
-      appKeyValue = mAppPath;
-    }
-
+    nsAutoCString appKeyValue(MOZ_APP_NAME);
     appKeyValue.AppendLiteral(" %s");
 
     for (unsigned int i = 0; i < ArrayLength(appProtocols); ++i) {
diff -up mozilla-aurora/browser/components/shell/nsGNOMEShellService.h.default mozilla-aurora/browser/components/shell/nsGNOMEShellService.h
--- mozilla-aurora/browser/components/shell/nsGNOMEShellService.h.default	2016-12-08 10:51:04.049353573 +0100
+++ mozilla-aurora/browser/components/shell/nsGNOMEShellService.h	2016-12-08 10:55:53.754263671 +0100
@@ -13,7 +13,7 @@
 class nsGNOMEShellService final : public nsIGNOMEShellService
 {
 public:
-  nsGNOMEShellService() : mAppIsInPath(false) { }
+  nsGNOMEShellService() : mAppIsInPath(true) { }
 
   NS_DECL_ISUPPORTS
   NS_DECL_NSISHELLSERVICE
diff -up mozilla-aurora/browser/components/shell/ShellService.jsm.default mozilla-aurora/browser/components/shell/ShellService.jsm
--- mozilla-aurora/browser/components/shell/ShellService.jsm.default	2016-12-08 10:56:51.602245720 +0100
+++ mozilla-aurora/browser/components/shell/ShellService.jsm	2016-12-08 10:56:58.213243668 +0100
@@ -48,7 +48,7 @@ let ShellServiceInternal = {
    * up and "browser.shell.checkDefaultBrowser" is true, otherwise it
    * is false.
    */
-  _checkedThisSession: false,
+  _checkedThisSession: true,
   get shouldCheckDefaultBrowser() {
     // If we've already checked, the browser has been started and this is a
     // new window open, and we don't want to check again.
